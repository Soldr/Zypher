{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Zypher UI Library Documentation Authors xTheAlex14 Source Code If you want the source code, it is here. Basic Usage local library = loadstring ( game : HttpGet ( \"https://zypher.wtf/UI-Lib\" ))() Create The GUI Window local Main = library : CreateMain ({ -- Required projName = \"UILib\" , -- The name for the UI in game.CoreGui, not the GUI itself. -- Optional Resizable = true , -- Requires MinSize and MaxSize MinSize = UDim2 . new ( 0 , 400 , 0 , 400 ), MaxSize = UDim2 . new ( 0 , 750 , 0 , 500 ) }) Categories and Sections -- A category is a tab local Category = Main : CreateCategory ( \"Category\" ) -- Self explanatory local Section = Category : CreateSection ( \"Section\" )","title":"Basics"},{"location":"#zypher-ui-library-documentation","text":"","title":"Zypher UI Library Documentation"},{"location":"#authors","text":"xTheAlex14","title":"Authors"},{"location":"#source-code","text":"If you want the source code, it is here.","title":"Source Code"},{"location":"#basic-usage","text":"local library = loadstring ( game : HttpGet ( \"https://zypher.wtf/UI-Lib\" ))()","title":"Basic Usage"},{"location":"#create-the-gui-window","text":"local Main = library : CreateMain ({ -- Required projName = \"UILib\" , -- The name for the UI in game.CoreGui, not the GUI itself. -- Optional Resizable = true , -- Requires MinSize and MaxSize MinSize = UDim2 . new ( 0 , 400 , 0 , 400 ), MaxSize = UDim2 . new ( 0 , 750 , 0 , 500 ) })","title":"Create The GUI Window"},{"location":"#categories-and-sections","text":"-- A category is a tab local Category = Main : CreateCategory ( \"Category\" ) -- Self explanatory local Section = Category : CreateSection ( \"Section\" )","title":"Categories and Sections"},{"location":"interactables/","text":"Interactables Button, Toggle, Slider, Textlabel, Textbox, Dropdown, Keybind, Colorpicker Creating Interactables All interactables use the same function to make them. Section : Create ( \"Button\" , -- Interactable type \"Button\" , -- The name of the interactable function ( v ) -- Put v in if the interactable type returns a value -- Callback end , { -- Options } ) Button A simple button Section : Create ( \"Button\" , \"Button\" , -- The name of the button function () -- Callback print ( 'Button pressed!' ) end , { -- Optional animated = true -- Default: false } ) Toggle A on/off switch Section : Create ( \"Toggle\" , \"Toggle\" , -- The name of the toggle function ( v ) -- Callback print ( v ) -- State of the toggle end , { -- Required default = true -- Default state } ) Slider A slippery value selector Section : Create ( \"Slider\" , \"Slider\" , -- The name of the slider function ( v ) -- Callback print ( v ) -- Value of the slider end , { -- Required min = 0 , -- Smallest value on the slider max = 128 , -- Largest value on the slider -- Optional default = 2 , precise = true , -- Whether to do decimal values changeablevalue = false -- Should the slider be changeable } ) Textbox A text input Section : Create ( \"Textbox\" , \"Textbox\" , -- The name of the textbox function ( v ) -- Callback print ( v ) -- Text in the textbox end , { -- Optional text = \"This is optional\" } ) Keybind Bind a function to a key. A list of keycodes can be found here Section : Create ( \"Keybind\" , \"Keybind\" , -- The name of the keybind function () -- Callback print ( 'Key pressed!' ) end , { -- Required min = 0 , -- Smallest value on the slider max = 128 , -- Largest value on the slider -- Optional default = Enum . KeyCode . X } ) Dropdown For listing things that can be chosen from, or just listing things Section : Create ( \"Dropdown\" , \"Dropdown\" , -- The name of the dropdown function ( v ) -- Callback print ( v ) -- Option selected end , { -- Required options = { \"Apples\" , \"Bananas\" , \"Pears\" }, -- Optional default = \"Apples\" search = true -- Allows for searching through the dropdown, useful for large arrays of values } ) Color Picker Pick a color! Section : Create ( \"Colorpicker\" , \"Color picker\" , -- The name of the color picker function ( color ) -- Callback print ( color ) -- Color3 Value end , { -- Optional default = Color3 . fromRGB ( 255 , 255 , 255 ) } ) Textlabel Well, a label Section : Create ( \"Textlabel\" , \"Textlabel\" -- The text for the label )","title":"Interactables"},{"location":"interactables/#interactables","text":"Button, Toggle, Slider, Textlabel, Textbox, Dropdown, Keybind, Colorpicker","title":"Interactables"},{"location":"interactables/#creating-interactables","text":"All interactables use the same function to make them. Section : Create ( \"Button\" , -- Interactable type \"Button\" , -- The name of the interactable function ( v ) -- Put v in if the interactable type returns a value -- Callback end , { -- Options } )","title":"Creating Interactables"},{"location":"interactables/#button","text":"A simple button Section : Create ( \"Button\" , \"Button\" , -- The name of the button function () -- Callback print ( 'Button pressed!' ) end , { -- Optional animated = true -- Default: false } )","title":"Button"},{"location":"interactables/#toggle","text":"A on/off switch Section : Create ( \"Toggle\" , \"Toggle\" , -- The name of the toggle function ( v ) -- Callback print ( v ) -- State of the toggle end , { -- Required default = true -- Default state } )","title":"Toggle"},{"location":"interactables/#slider","text":"A slippery value selector Section : Create ( \"Slider\" , \"Slider\" , -- The name of the slider function ( v ) -- Callback print ( v ) -- Value of the slider end , { -- Required min = 0 , -- Smallest value on the slider max = 128 , -- Largest value on the slider -- Optional default = 2 , precise = true , -- Whether to do decimal values changeablevalue = false -- Should the slider be changeable } )","title":"Slider"},{"location":"interactables/#textbox","text":"A text input Section : Create ( \"Textbox\" , \"Textbox\" , -- The name of the textbox function ( v ) -- Callback print ( v ) -- Text in the textbox end , { -- Optional text = \"This is optional\" } )","title":"Textbox"},{"location":"interactables/#keybind","text":"Bind a function to a key. A list of keycodes can be found here Section : Create ( \"Keybind\" , \"Keybind\" , -- The name of the keybind function () -- Callback print ( 'Key pressed!' ) end , { -- Required min = 0 , -- Smallest value on the slider max = 128 , -- Largest value on the slider -- Optional default = Enum . KeyCode . X } )","title":"Keybind"},{"location":"interactables/#dropdown","text":"For listing things that can be chosen from, or just listing things Section : Create ( \"Dropdown\" , \"Dropdown\" , -- The name of the dropdown function ( v ) -- Callback print ( v ) -- Option selected end , { -- Required options = { \"Apples\" , \"Bananas\" , \"Pears\" }, -- Optional default = \"Apples\" search = true -- Allows for searching through the dropdown, useful for large arrays of values } )","title":"Dropdown"},{"location":"interactables/#color-picker","text":"Pick a color! Section : Create ( \"Colorpicker\" , \"Color picker\" , -- The name of the color picker function ( color ) -- Callback print ( color ) -- Color3 Value end , { -- Optional default = Color3 . fromRGB ( 255 , 255 , 255 ) } )","title":"Color Picker"},{"location":"interactables/#textlabel","text":"Well, a label Section : Create ( \"Textlabel\" , \"Textlabel\" -- The text for the label )","title":"Textlabel"}]}